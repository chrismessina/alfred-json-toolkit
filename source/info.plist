<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.chrismessina.toolkits.json</string>
	<key>category</key>
	<string>Toolkits</string>
	<key>connections</key>
	<dict>
		<key>11B51835-4B8D-4C25-BAF0-7748DAC4E2AA</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>663D92DD-640D-4667-B4D8-286B311D1B3D</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>1D9BC013-2E7E-4B72-BD6F-39CDF2100856</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>2C2C3CA1-6D89-4968-BF6B-A6389898705F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>37C07BF0-6A17-4690-BC35-558082392097</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>B06F3514-47ED-492F-A3F8-AE065F4342D4</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>663D92DD-640D-4667-B4D8-286B311D1B3D</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>1D9BC013-2E7E-4B72-BD6F-39CDF2100856</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>D4B64F12-E10F-49E3-9B22-A9559B2B0DFC</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>86890911-C07C-48E5-9D60-87D3FEF33F1D</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>70C9A2B6-9C69-460F-89EF-8B557E1153A5</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>A7764611-A62A-4172-AB95-DE9C224461CE</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>663D92DD-640D-4667-B4D8-286B311D1B3D</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Chris Messina</string>
	<key>description</key>
	<string>Prettify JSON files</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>JSON Toolkit</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>1</integer>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>38</integer>
				<key>hotmod</key>
				<integer>1310720</integer>
				<key>hotstring</key>
				<string>J</string>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedApps</key>
				<array>
					<string>com.apple.finder</string>
				</array>
				<key>relatedAppsMode</key>
				<integer>1</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>11B51835-4B8D-4C25-BAF0-7748DAC4E2AA</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>111</integer>
				<key>script</key>
				<string>from __future__ import print_function
import json
import sys

n = 0  # number of files processed
for path in sys.argv[1:]:
    try:
        with open(path) as fp:
            data = json.load(fp)

        with open(path, 'w') as fp:
            json.dump(data, fp, indent=4, separators=(',', ': '))

        n += 1
    except Exception as err:
        # anything written to STDERR goes to Alfred's debugger
        print('[error] file %s: %s' % (path, err), file=sys.stderr)

plural = ('s', '')[n==1]
# anything written to STDOUT goes to the next action (i.e. arg/{query})
if n == 0:
    print('Nothing to prettify!', end='')
else:
    print('Prettified %d file%s' % (n, plural), end='')</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>3</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>663D92DD-640D-4667-B4D8-286B311D1B3D</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<true/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string></string>
				<key>title</key>
				<string>{query}</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>2C2C3CA1-6D89-4968-BF6B-A6389898705F</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>{query}</string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>1D9BC013-2E7E-4B72-BD6F-39CDF2100856</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>acceptsmulti</key>
				<integer>1</integer>
				<key>filetypes</key>
				<array>
					<string>com.netscape.javascript-source</string>
					<string>public.json</string>
				</array>
				<key>name</key>
				<string>Prettify</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.action</string>
			<key>uid</key>
			<string>A7764611-A62A-4172-AB95-DE9C224461CE</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist='https://raw.githubusercontent.com/chrismessina/alfred-json-toolkit/master/alfred-json-toolkit/source/info.plist'
readonly workflow_url='chrismessina/alfred-json-toolkit/'
readonly download_type='github_release'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  local -r terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>D4B64F12-E10F-49E3-9B22-A9559B2B0DFC</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<true/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>function run() {
  var json = {query};
  return JSON.stringify(json, null, 2);
}</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>B06F3514-47ED-492F-A3F8-AE065F4342D4</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>pretty</string>
				<key>subtext</key>
				<string>Paste minified JSON</string>
				<key>text</key>
				<string>Pretty JSON</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>37C07BF0-6A17-4690-BC35-558082392097</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>/usr/bin/python json_validate.py</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>70C9A2B6-9C69-460F-89EF-8B557E1153A5</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>validate</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Validate JSON</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>86890911-C07C-48E5-9D60-87D3FEF33F1D</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>The JSON Toolkit for Alfred makes it easy to quickly prettify JSON files.

Thanks to @deanishe for helping.

--

🎩 You can find my Alfred Workflows here:

https://github.com/chrismessina?tab=repositories&amp;q=alfred


👔 My Alfred Themes are here:

https://bit.ly/alfred-themes


☕ You can also tip me a coffee or two if you like:

https://ko-fi.com/chris


🤙🏻 I'm available for product design consulting as well:

https://superpeer.com/chrismessina</string>
	<key>uidata</key>
	<dict>
		<key>11B51835-4B8D-4C25-BAF0-7748DAC4E2AA</key>
		<dict>
			<key>xpos</key>
			<integer>55</integer>
			<key>ypos</key>
			<integer>60</integer>
		</dict>
		<key>1D9BC013-2E7E-4B72-BD6F-39CDF2100856</key>
		<dict>
			<key>xpos</key>
			<integer>475</integer>
			<key>ypos</key>
			<integer>160</integer>
		</dict>
		<key>2C2C3CA1-6D89-4968-BF6B-A6389898705F</key>
		<dict>
			<key>xpos</key>
			<integer>625</integer>
			<key>ypos</key>
			<integer>130</integer>
		</dict>
		<key>37C07BF0-6A17-4690-BC35-558082392097</key>
		<dict>
			<key>xpos</key>
			<integer>55</integer>
			<key>ypos</key>
			<integer>395</integer>
		</dict>
		<key>663D92DD-640D-4667-B4D8-286B311D1B3D</key>
		<dict>
			<key>xpos</key>
			<integer>285</integer>
			<key>ypos</key>
			<integer>130</integer>
		</dict>
		<key>70C9A2B6-9C69-460F-89EF-8B557E1153A5</key>
		<dict>
			<key>xpos</key>
			<integer>285</integer>
			<key>ypos</key>
			<integer>565</integer>
		</dict>
		<key>86890911-C07C-48E5-9D60-87D3FEF33F1D</key>
		<dict>
			<key>xpos</key>
			<integer>55</integer>
			<key>ypos</key>
			<integer>565</integer>
		</dict>
		<key>A7764611-A62A-4172-AB95-DE9C224461CE</key>
		<dict>
			<key>xpos</key>
			<integer>55</integer>
			<key>ypos</key>
			<integer>210</integer>
		</dict>
		<key>B06F3514-47ED-492F-A3F8-AE065F4342D4</key>
		<dict>
			<key>colorindex</key>
			<integer>10</integer>
			<key>xpos</key>
			<integer>285</integer>
			<key>ypos</key>
			<integer>395</integer>
		</dict>
		<key>D4B64F12-E10F-49E3-9B22-A9559B2B0DFC</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>475</integer>
			<key>ypos</key>
			<integer>225</integer>
		</dict>
	</dict>
	<key>variablesdontexport</key>
	<array/>
	<key>version</key>
	<string>0.1.2</string>
	<key>webaddress</key>
	<string>https://chrismessina.me</string>
</dict>
</plist>
